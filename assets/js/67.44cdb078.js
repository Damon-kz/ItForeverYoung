(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{635:function(t,s,a){"use strict";a.r(s);var e=a(17),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"高并发系统设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高并发系统设计"}},[t._v("#")]),t._v(" 高并发系统设计")]),t._v(" "),a("h2",{attrs:{id:"设计一个秒杀系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计一个秒杀系统"}},[t._v("#")]),t._v(" 设计一个秒杀系统")]),t._v(" "),a("h3",{attrs:{id:"需要考虑的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需要考虑的问题"}},[t._v("#")]),t._v(" 需要考虑的问题")]),t._v(" "),a("ol",[a("li",[t._v("防止超卖")]),t._v(" "),a("li",[t._v("避免缓存出现宕机")]),t._v(" "),a("li",[t._v("服务降级，限流，熔断")])]),t._v(" "),a("h3",{attrs:{id:"解决思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决思路"}},[t._v("#")]),t._v(" 解决思路")]),t._v(" "),a("ol",[a("li",[t._v("首先考虑单一原则，我们专门设计一个秒杀系统，使用单独的数据库，这样的话，即便秒杀系统挂了，也不会影响其他服务。")]),t._v(" "),a("li",[t._v("秒杀系统集群部署，既然单机服务怕挂掉，那我就多部署几个服务，前端可以通过Nginx进行负载均衡。")]),t._v(" "),a("li",[t._v("Redis也进行集群部署，主从模式/Sentinel 哨兵模式/cluster 集群模式")]),t._v(" "),a("li",[t._v("缓存预热，把相关的商品信息，秒杀数量等等全都加载到缓存中，尽量保证在秒杀阶段这些信息都能命中缓存。")]),t._v(" "),a("li",[t._v("静态资源加载到cdn中，尽量减少前端服务的压力。")]),t._v(" "),a("li",[t._v("对请求URL进行加密，避免有人直接通过查看服务端URL写脚本发送大量请求。")]),t._v(" "),a("li",[t._v("在前端页面做限流，间隔100ms（配置）之内的重复点击，不发送请求。")]),t._v(" "),a("li",[t._v("在网关层做限流，同一个ip地址的请求超过10次（配置）后即不做处理，避免有人通过查看url直接把请求打到服务端。")]),t._v(" "),a("li",[t._v("在service层，先抢库存，写一个lua脚本，有库存时就-1返回true，没库存时就返回false。")]),t._v(" "),a("li",[t._v("当service层返回false时，前端可以直接提示用户秒杀失败，这样就避免了用户的无效点击（对用户来说无效，但是对系统来说可是实打实的一次请求，所以此处也是限流）。")]),t._v(" "),a("li",[t._v("当某个请求抢库存成功之后，将创建订单的动作组装一个message发布到mq中，订单系统从mq中接受message开始真正的创建订单。")]),t._v(" "),a("li",[t._v("创建订单完成后，可以异步发送消息提示用户，秒杀成功。")]),t._v(" "),a("li",[a("s",[t._v("如果有多种商品秒杀，上述第9步也有可能发生单点故障，毕竟Redis的qps也是有上限的，即便是我们做了集群部署。那么此时可以考虑，把减库存、创建订单两个动作组装成一个message发布到mq中，然后异步处理。")])]),t._v(" "),a("li",[t._v("服务降级其实就是考虑到资源不够用的问题，由于此时我们主要考虑秒杀系统，所以可以把用户管理、地址管理等等服务降级。")]),t._v(" "),a("li",[t._v("上述设计中，步骤7，8，9，10其实都属于限流操作。")]),t._v(" "),a("li",[t._v("上述设计中，其实没有具体的熔断措施，但是，因为一开始，就把秒杀系统做成了一个独立的系统，并且与其他系统的交互都是通过mq，所以即便是秒杀系统宕机，也不会影响其他服务。")])]),t._v(" "),a("p",[a("strong",[t._v("注：考虑到Redis的访问速度很快，一般的秒杀可以参考思路9、10，如果是商品很多的秒杀活动，可以把步骤9、10更换为步骤11。")])]),t._v(" "),a("h2",{attrs:{id:"分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[t._v("#")]),t._v(" 分布式锁")]),t._v(" "),a("h3",{attrs:{id:"zookeeper-实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-实现"}},[t._v("#")]),t._v(" zookeeper 实现")]),t._v(" "),a("h3",{attrs:{id:"redis-实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-实现"}},[t._v("#")]),t._v(" Redis 实现")]),t._v(" "),a("h3",{attrs:{id:"mysql-实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-实现"}},[t._v("#")]),t._v(" MySQL 实现")]),t._v(" "),a("h2",{attrs:{id:"分布式事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式事务"}},[t._v("#")]),t._v(" 分布式事务")]),t._v(" "),a("h3",{attrs:{id:"tcc-两阶段提交协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcc-两阶段提交协议"}},[t._v("#")]),t._v(" tcc（两阶段提交协议）")]),t._v(" "),a("h3",{attrs:{id:"最大努力保证模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最大努力保证模式"}},[t._v("#")]),t._v(" 最大努力保证模式")]),t._v(" "),a("h3",{attrs:{id:"事务补偿机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务补偿机制"}},[t._v("#")]),t._v(" 事务补偿机制")]),t._v(" "),a("h2",{attrs:{id:"负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[t._v("#")]),t._v(" 负载均衡")]),t._v(" "),a("h3",{attrs:{id:"硬件负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#硬件负载均衡"}},[t._v("#")]),t._v(" 硬件负载均衡")]),t._v(" "),a("h4",{attrs:{id:"f5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#f5"}},[t._v("#")]),t._v(" F5")]),t._v(" "),a("h3",{attrs:{id:"软件负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软件负载均衡"}},[t._v("#")]),t._v(" 软件负载均衡")]),t._v(" "),a("h4",{attrs:{id:"四层负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四层负载均衡"}},[t._v("#")]),t._v(" 四层负载均衡")]),t._v(" "),a("h5",{attrs:{id:"lvs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lvs"}},[t._v("#")]),t._v(" lvs")]),t._v(" "),a("h4",{attrs:{id:"七层负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七层负载均衡"}},[t._v("#")]),t._v(" 七层负载均衡")]),t._v(" "),a("h5",{attrs:{id:"nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" Nginx")]),t._v(" "),a("p",[t._v("upstream 配置")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Syntax:")]),t._v(" upstream name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ... "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Default:")]),t._v(" -\nContext: http\n// Nginx负载均衡支持将客户端请求代理转发到一组upstream虚拟服务池\n\nupstream load_pass")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ip_hash")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 采用ip_hash的调度算法\n // 下面是轮询的调度算法\n "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 10.0.0.6:80 weight=5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 当前节点的权重是5\n "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 10.0.0.7:80 down")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 当前节点是宕机的，不参与负载\n "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 10.0.0.8:80 backup")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 预留的备份服务器\n "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")]),t._v(" 10.0.0.9:80 max_conns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("max_conns：当前节点支持的tcp最大连接数")]),t._v("\n server 10.0.0.10:80 max_fails=1 fail_timeout=10s")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("max_fails：允许请求失败的次数")]),t._v(" fail_timeout：超过最大的失败次数后，服务暂停访问的时间\n // 健康检查需要依赖第三方模块：nginx_upstream_check_module\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# interval 检测间隔时间，单位为毫秒")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rise 表示请求2次正常，标记此后端的状态为up")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fall 表示请求3次失败，标记此后端的状态为down")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# type 类型为tcp")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# timeout 超时时间，单位为毫秒")]),t._v("\n check interval=3000 rise=2 fall=3 timeout=1000 type=tcp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v(" xxx.aaa.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v(" http://load_pass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v(" proxy_params")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  // 当出现指定错误时，将请求转移到其他节点上\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_next_upstream")]),t._v(" error timeout http_500 http_502 http_503 http_504")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[t._v("// "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_params的配置")]),t._v("\nproxy_set_header Host "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_host")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" X-Real-IP "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_set_header")]),t._v(" X-Forwarded-For "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_connect_timeout")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_send_timeout")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_read_timeout")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_buffering")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_buffer_size")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32k")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_buffers")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("128k")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("调度算法")]),t._v(" "),a("ol",[a("li",[t._v("轮询")]),t._v(" "),a("li",[t._v("加权轮询")]),t._v(" "),a("li",[t._v("ip_hash")])]),t._v(" "),a("h5",{attrs:{id:"haproxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#haproxy"}},[t._v("#")]),t._v(" HAProxy")]),t._v(" "),a("h4",{attrs:{id:"阿里云slb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阿里云slb"}},[t._v("#")]),t._v(" 阿里云SLB")]),t._v(" "),a("h2",{attrs:{id:"了解哪些限流方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#了解哪些限流方案"}},[t._v("#")]),t._v(" 了解哪些限流方案")]),t._v(" "),a("h2",{attrs:{id:"如何实现一个熔断器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何实现一个熔断器"}},[t._v("#")]),t._v(" 如何实现一个熔断器")])])}),[],!1,null,null,null);s.default=r.exports}}]);