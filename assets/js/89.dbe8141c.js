(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{615:function(a,t,s){"use strict";s.r(t);var r=s(6),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[a._v("#")]),a._v(" 问题")]),a._v(" "),s("h3",{attrs:{id:"链表的层次变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链表的层次变量"}},[a._v("#")]),a._v(" 链表的层次变量")]),a._v(" "),s("h2",{attrs:{id:"源码分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#源码分析"}},[a._v("#")]),a._v(" 源码分析")]),a._v(" "),s("h3",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[a._v("#")]),a._v(" Map")]),a._v(" "),s("h4",{attrs:{id:"hashmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap"}},[a._v("#")]),a._v(" "),s("RouterLink",{attrs:{to:"/java/hashmap.html"}},[a._v("HashMap")])],1),a._v(" "),s("h5",{attrs:{id:"_1-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-7"}},[a._v("#")]),a._v(" 1.7")]),a._v(" "),s("p",[a._v("头插法，数组 + 链表；")]),a._v(" "),s("h5",{attrs:{id:"_1-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-8"}},[a._v("#")]),a._v(" 1.8")]),a._v(" "),s("p",[a._v("尾插法，数组 + 链表/红黑树；")]),a._v(" "),s("h4",{attrs:{id:"concurrenthashmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concurrenthashmap"}},[a._v("#")]),a._v(" "),s("RouterLink",{attrs:{to:"/java/concurrent-hashmap.html"}},[a._v("ConcurrentHashMap")])],1),a._v(" "),s("h5",{attrs:{id:"_1-7-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-2"}},[a._v("#")]),a._v(" 1.7")]),a._v(" "),s("p",[a._v("segment分段锁，数组 + 链表；")]),a._v(" "),s("h5",{attrs:{id:"_1-8-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-8-2"}},[a._v("#")]),a._v(" 1.8")]),a._v(" "),s("p",[a._v("cas + synchronized，数组 + 链表/红黑树；")]),a._v(" "),s("h4",{attrs:{id:"treemap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#treemap"}},[a._v("#")]),a._v(" TreeMap")]),a._v(" "),s("p",[a._v("TreeMap实现了SortedMap；")]),a._v(" "),s("h4",{attrs:{id:"hashtable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashtable"}},[a._v("#")]),a._v(" Hashtable")]),a._v(" "),s("h3",{attrs:{id:"set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[a._v("#")]),a._v(" Set")]),a._v(" "),s("h4",{attrs:{id:"hashset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashset"}},[a._v("#")]),a._v(" HashSet")]),a._v(" "),s("h4",{attrs:{id:"treeset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#treeset"}},[a._v("#")]),a._v(" TreeSet")]),a._v(" "),s("p",[a._v("TreeSet实现了SortedSet；")]),a._v(" "),s("h3",{attrs:{id:"list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[a._v("#")]),a._v(" List")]),a._v(" "),s("h4",{attrs:{id:"arraylist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arraylist"}},[a._v("#")]),a._v(" ArrayList")]),a._v(" "),s("p",[a._v("底层基于数组，线程不安全，效率高。")]),a._v(" "),s("h4",{attrs:{id:"linkedlist"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist"}},[a._v("#")]),a._v(" LinkedList")]),a._v(" "),s("p",[a._v("底层基于双向链表。")]),a._v(" "),s("h4",{attrs:{id:"vector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vector"}},[a._v("#")]),a._v(" Vector")]),a._v(" "),s("p",[a._v("底层基于数组，所有方法都用synchronized修饰，线程安全，但是效率低。")]),a._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")])])}),[],!1,null,null,null);t.default=e.exports}}]);