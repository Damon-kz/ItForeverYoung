(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{436:function(s,e,t){"use strict";t.r(e);var a=t(43),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"redis-高可用方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-高可用方案"}},[s._v("#")]),s._v(" Redis 高可用方案")]),s._v(" "),t("p",[t("strong",[s._v("注：在Redis客户端，可以通过以下命令，指定当前的Redis server作为某一台Redis server的slave。")])]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在从节点中设置主节点的IP和端口")]),s._v("\nslaveof <host> <port>\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果主节点有密码，可通过下面的命令设置主节点的密码")]),s._v("\nconfig set masterauth <password>\n")])])]),t("h2",{attrs:{id:"redis-主从配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-主从配置"}},[s._v("#")]),s._v(" Redis 主从配置")]),s._v(" "),t("h2",{attrs:{id:"redis-sentinel-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-sentinel-配置"}},[s._v("#")]),s._v(" Redis Sentinel 配置")]),s._v(" "),t("ol",[t("li",[s._v("哨兵模式启动后，如果Redis master宕机，sentinel会选举出一个slave晋升为master，这个过程会导致Redis集群短暂的不可用。")]),s._v(" "),t("li",[s._v("假设一个Redis客户端已经连接上了Redis哨兵集群，此时，Redis Sentinel全部挂掉，这个客户端一样可以正常连接Redis集群，因为它已经记录下了Redis集群中的master的地址；但如果此时，master节点也宕机，则Redis集群不可用，除非master节点重新连接或Redis sentinel重新启动选举出新的master。")])]),s._v(" "),t("h2",{attrs:{id:"redis-cluster-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-cluster-配置"}},[s._v("#")]),s._v(" Redis Cluster 配置")])])}),[],!1,null,null,null);e.default=r.exports}}]);