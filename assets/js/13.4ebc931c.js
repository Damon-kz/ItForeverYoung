(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{258:function(a,t,r){"use strict";r.r(t);var s=r(28),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"java"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[a._v("#")]),a._v(" Java")]),a._v(" "),r("h2",{attrs:{id:"源码理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#源码理解"}},[a._v("#")]),a._v(" 源码理解")]),a._v(" "),r("h3",{attrs:{id:"hashmap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hashmap"}},[a._v("#")]),a._v(" Hashmap")]),a._v(" "),r("h3",{attrs:{id:"concurrenthashmap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#concurrenthashmap"}},[a._v("#")]),a._v(" ConcurrentHashMap")]),a._v(" "),r("h3",{attrs:{id:"abstractqueuedsynchronizer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#abstractqueuedsynchronizer"}},[a._v("#")]),a._v(" AbstractQueuedSynchronizer")]),a._v(" "),r("h3",{attrs:{id:"reentrantlock"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reentrantlock"}},[a._v("#")]),a._v(" ReentrantLock")]),a._v(" "),r("h3",{attrs:{id:"readwritelock"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#readwritelock"}},[a._v("#")]),a._v(" ReadWriteLock")]),a._v(" "),r("h3",{attrs:{id:"atomic"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#atomic"}},[a._v("#")]),a._v(" Atomic*")]),a._v(" "),r("h3",{attrs:{id:"优先级队列的底层原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#优先级队列的底层原理"}},[a._v("#")]),a._v(" 优先级队列的底层原理")]),a._v(" "),r("h2",{attrs:{id:"关键字理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关键字理解"}},[a._v("#")]),a._v(" 关键字理解")]),a._v(" "),r("h3",{attrs:{id:"synchronized"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#synchronized"}},[a._v("#")]),a._v(" synchronized")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[a._v("* 底层实现\n* 锁优化\n")])])]),r("h3",{attrs:{id:"volatile"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#volatile"}},[a._v("#")]),a._v(" volatile")]),a._v(" "),r("ul",[r("li",[a._v("可见性")]),a._v(" "),r("li",[a._v("有序性")])]),a._v(" "),r("h2",{attrs:{id:"线程池的实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#线程池的实现"}},[a._v("#")]),a._v(" 线程池的实现")]),a._v(" "),r("p",[a._v("###Executor")]),a._v(" "),r("h3",{attrs:{id:"executeservice"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#executeservice"}},[a._v("#")]),a._v(" ExecuteService")]),a._v(" "),r("h3",{attrs:{id:"threadpoolexecutor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#threadpoolexecutor"}},[a._v("#")]),a._v(" ThreadPoolExecutor")]),a._v(" "),r("h3",{attrs:{id:"executors（工厂类）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#executors（工厂类）"}},[a._v("#")]),a._v(" Executors（工厂类）")]),a._v(" "),r("h2",{attrs:{id:"集合"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#集合"}},[a._v("#")]),a._v(" 集合")]),a._v(" "),r("h3",{attrs:{id:"链表的层次变量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表的层次变量"}},[a._v("#")]),a._v(" 链表的层次变量")]),a._v(" "),r("h2",{attrs:{id:"代理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#代理"}},[a._v("#")]),a._v(" 代理")]),a._v(" "),r("h3",{attrs:{id:"静态代理，动态代理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#静态代理，动态代理"}},[a._v("#")]),a._v(" 静态代理，动态代理")]),a._v(" "),r("h2",{attrs:{id:"java-内存模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#java-内存模型"}},[a._v("#")]),a._v(" Java 内存模型")]),a._v(" "),r("h3",{attrs:{id:"jmm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jmm"}},[a._v("#")]),a._v(" JMM")]),a._v(" "),r("h2",{attrs:{id:"其他"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),r("h3",{attrs:{id:"int的拆箱和装箱"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#int的拆箱和装箱"}},[a._v("#")]),a._v(" int的拆箱和装箱")])])}),[],!1,null,null,null);t.default=e.exports}}]);