(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{223:function(a,t,r){"use strict";r.r(t);var v=r(28),s=Object(v.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"面试专题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#面试专题"}},[a._v("#")]),a._v(" 面试专题")]),a._v(" "),r("p",[r("strong",[a._v("为了准备今年八九月份的面试，专门开一个面试专题，会慢慢的将Java热门面试题整理出来，并给出自己的见解，如有错误，还希望能到我的GitHub主页提出issue。")])]),a._v(" "),r("hr"),a._v(" "),r("h2",{attrs:{id:"java"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#java"}},[a._v("#")]),a._v(" Java")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("Hashmap")])]),a._v(" "),r("li",[r("p",[a._v("ConcurrentHashMap")])]),a._v(" "),r("li",[r("p",[a._v("ReentrantLock")])]),a._v(" "),r("li",[r("p",[a._v("synchronized")])]),a._v(" "),r("li",[r("p",[a._v("juc并发编程包")])]),a._v(" "),r("li",[r("p",[a._v("volatile的实现原理")])]),a._v(" "),r("li",[r("p",[a._v("Java内存模型")])]),a._v(" "),r("li",[r("p",[a._v("线程池的实现")])]),a._v(" "),r("li",[r("p",[a._v("int的拆箱和装箱")])]),a._v(" "),r("li",[r("p",[a._v("链表的层次变量")])]),a._v(" "),r("li",[r("p",[a._v("静态代理，动态代理")])])]),a._v(" "),r("h2",{attrs:{id:"jvm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jvm"}},[a._v("#")]),a._v(" JVM")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("CMS垃圾收集器的工作原理")])]),a._v(" "),r("li",[r("p",[a._v("了解哪些GC算法")])]),a._v(" "),r("li",[r("p",[a._v("jvm如何优化")])])]),a._v(" "),r("h2",{attrs:{id:"spring-framework"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-framework"}},[a._v("#")]),a._v(" Spring Framework")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("Spring是什么")])]),a._v(" "),r("li",[r("p",[a._v("IOC和AOP")])]),a._v(" "),r("li",[r("p",[a._v("Spring Bean的生命周期")])]),a._v(" "),r("li",[r("p",[a._v("Spring Bean循环依赖")])]),a._v(" "),r("li",[r("p",[a._v("Spring 依赖注入")])])]),a._v(" "),r("h2",{attrs:{id:"mybatis"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mybatis"}},[a._v("#")]),a._v(" Mybatis")]),a._v(" "),r("ul",[r("li",[a._v("mybatis执行流程，缓存")])]),a._v(" "),r("h2",{attrs:{id:"mysql"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mysql"}},[a._v("#")]),a._v(" MySQL")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("数据库的mvcc, rc和rr")])]),a._v(" "),r("li",[r("p",[a._v("msyql 优化")])]),a._v(" "),r("li",[r("p",[a._v("InnoDB索引原理")])]),a._v(" "),r("li",[r("p",[a._v("MySQL事务")])]),a._v(" "),r("li",[r("p",[a._v("MySQL隔离级别")])]),a._v(" "),r("li",[r("p",[a._v("表锁？行锁？")])])]),a._v(" "),r("h2",{attrs:{id:"spring-boot"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot"}},[a._v("#")]),a._v(" Spring Boot")]),a._v(" "),r("ul",[r("li",[a._v("Spring boot的自动装配")])]),a._v(" "),r("h2",{attrs:{id:"spring-cloud"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud"}},[a._v("#")]),a._v(" Spring Cloud")]),a._v(" "),r("h2",{attrs:{id:"spring-cloud-alibaba"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud-alibaba"}},[a._v("#")]),a._v(" Spring Cloud Alibaba")]),a._v(" "),r("h2",{attrs:{id:"dubbo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dubbo"}},[a._v("#")]),a._v(" Dubbo")]),a._v(" "),r("h2",{attrs:{id:"zookeeper"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper"}},[a._v("#")]),a._v(" Zookeeper")]),a._v(" "),r("h2",{attrs:{id:"redis"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[a._v("#")]),a._v(" Redis")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("Redis模型")])]),a._v(" "),r("li",[r("p",[a._v("缓存的三大问题")])])]),a._v(" "),r("h2",{attrs:{id:"mongodb"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mongodb"}},[a._v("#")]),a._v(" MongoDB")]),a._v(" "),r("h2",{attrs:{id:"rabbitmq-rocketmq-kafka"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq-rocketmq-kafka"}},[a._v("#")]),a._v(" RabbitMQ/RocketMQ/kafka")]),a._v(" "),r("h2",{attrs:{id:"elasticsearch"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#elasticsearch"}},[a._v("#")]),a._v(" Elasticsearch")]),a._v(" "),r("h2",{attrs:{id:"tcp-udp-nio"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-udp-nio"}},[a._v("#")]),a._v(" TCP/UDP/NIO")]),a._v(" "),r("h2",{attrs:{id:"分库分表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分库分表"}},[a._v("#")]),a._v(" 分库分表")]),a._v(" "),r("h2",{attrs:{id:"设计模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设计模式"}},[a._v("#")]),a._v(" 设计模式")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("单例模式")])]),a._v(" "),r("li",[r("p",[a._v("原型模式")])]),a._v(" "),r("li",[r("p",[a._v("工厂模式")])]),a._v(" "),r("li",[r("p",[a._v("策略模式")])]),a._v(" "),r("li",[r("p",[a._v("模板方法模式")])]),a._v(" "),r("li",[r("p",[a._v("过滤器模式")])]),a._v(" "),r("li",[r("p",[a._v("观察者模式")])]),a._v(" "),r("li",[r("p",[a._v("适配器模式")])]),a._v(" "),r("li",[r("p",[a._v("代理模式")])]),a._v(" "),r("li",[r("p",[a._v("包装模式")])])]),a._v(" "),r("h2",{attrs:{id:"linux常用命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#linux常用命令"}},[a._v("#")]),a._v(" Linux常用命令")]),a._v(" "),r("h2",{attrs:{id:"算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[a._v("#")]),a._v(" 算法")])])}),[],!1,null,null,null);t.default=s.exports}}]);